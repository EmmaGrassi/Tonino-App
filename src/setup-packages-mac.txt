#
# setup-packages-mac.txt
#
# Copyright (c) 2016, Paul Holleis, Marko Luther
# All rights reserved.
# 
# 
# LICENSE
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

Current Versions:

o XCode 4.6.3 + command line tools
o Python 2.7.13 / 3.5.3
o pyserial 3.3.0
o Qt 5.8.0
o SIP 4.19.2
o PyQt 5.8.1
o numpy 1.12.1
o scipy 0.19.1
o matplotlib 2.0.0
o Arduino 1.6.7
o pyobjc 3.2.1
o py2app 0.12


Upgrade History:

- 2017-03-31
 . PyQt 5.8.0 => 5.8.1
 . SIP 4.19.1 => 4.19.2
 . numpy 1.11.3 => 1.12.1
 . scipy 0.18.0 => 0.19.0
 . altgraph 0.13 => 0.14
 . modulegraph 0.13 => 0.14
 . py2app 0.10 => 0.12
 . pyserial 3.0.1 => 3.3.0
- 2017-02-16
 . QT 5.7.1 => 5.8.0
 . SIP 4.16.8-trunk => 4.19.1
 . PyQt 5.7.1-trunk => 5.8.0
 . matplotlib 1.5.3 => 2.0.0
 . pip-review 0.5 => 0.5.2
 . PyInstaller 3.2 => 3.2.1
 . pip 8.1.2 => 9.0.1
 . setuptools 28.8.0 => 34.2.0
- 2016-12-21
 . Qt 5.6.2 => Qt 5.7.1
 . Python 2.7.12 => 2.7.13
 . matplotlib 1.5.1 => 1.5.3
 . pyobjc 3.1.1 => 3.2.1
- 2016-11-12
 . QT 5.4.2 => 5.6.2
 . PyQt 4.11.4 => 5.7.1-trunk (12.11.2016)
- 2016-10-15
 . pyserial 3.1 => 3.2.1
- 2016-06-05:
 . pyserial 2.7 => 3.1
- 2016-02-20
 . XCode 4.6.3 => 7.2.1
 . SIP 4.16.8 => 4.17
 . pyserial 2.7 => 3.0.1
 . numpy 1.9.2 => 1.10.1
 . scipy 0.15.1 => 0.16.1
 . matplotlib 1.4.3 => 1.5.1
 . Arduino 1.4.5 => 1.6.7
- 2015-08-09
 . PyQt 5.5.1
- 2015-06-14
 . QT 5.4.2
 . PyQt 4.11.3 trunk 31.5.2015 => 4.11.4
- 2015-05-31
 . Python 2.7.9 => 2.7.10
 . QT 4.8.6 => 4.8.7
 . SIP 4.16.3 => 4.16.7
 . PyQt 4.11.2 => trunk 31.5.2015
 . numpy 1.9.1RC1 => 1.9.2
 . scipy 0.14.0 => 0.15.1
 . matplotlib 1.4.2 => 1.4.3
- 2014-12-31
 . Python 2.7.8 => 2.7.9
- 2014-10-30
 . Python 2.7.6 => 2.7.8
 . Qt 4.8.5 => 4.8.6
 . SIP 4.16.2 => 4.16.4
 . PyQt 4.11.1 => 4.11.3
 . numpy 1.8.2 => 1.9.1
 . matplotlib 1.3.1 => 1.4.2
- 2014-08-06
 . Python 3.3.3 => 3.4.1
 . QT 4.8.5 => 4.8.6
 . SIP 4.15.3 => 4.16.2
 . PyQt 4.10.3 => 4.11.1
 . numpy 1.8.0 => 1.8.2
 . scipy 0.13.3 => 0.14.0
 . py2app 0.8 => 0.9
- 2013-03-17
 . scipy 0.13.1 => 0.13.3
- 2014-02-24
 . py2app 0.7.3 => 0.8
- 2013-11-12:
 . scipy 0.13.1
 . numpy 1.8.0
 . Python 3.3.2 => 3.3.3
 . QT 4.8.4 => 4.8.5
 . PyQt 4.10.0 => 4.10.3
 . SIP 4.14.5 => 4.15.3
- 2013-11-01:
  adds phyobjc 2.5.1
- 2013-10-18:
  matplotlib 1.3.0 => 1.3.1
- 2013-09-09:
  SIP 4.14.7 => 4.15.1
  Qt 5.1.0 => 5.1.1
- 2013-07-25:
  Initial Setup



Installation Instructions:


1) Install XCode

Install via the AppStore (incl. the command line tools)


2) Install Python 3.x 10.6 64bit

download from http://www.python.org/ and install using the installer

set default to 64bit:
# defaults write com.apple.versioner.python Prefer-32-Bit -bool no


3) Install pyserial 

download latest source from http://pypi.python.org/pypi/pyserial

# tar xzf pyserial-2.x.tar.gz
# cd pyserial-2.x
# python3 setup.py build
# sudo python3 setup.py install


4) Install QT ("Framework Only" without the debug libs and not the "SDK/Complete Component Environment")

download and install (v4.x.y, OS X 10.6+, Cocoa, 64bit only)


5) Install SIP

# tar xzf sip-4.xx.x.tar.gz
# cd sip-4.xx.x
# python3 configure.py
# make
# sudo make install


6) Install PyQt

# export PATH=/Library/Frameworks/Python.framework/Versions/3.3/bin:$PATH
# export PATH=/Applications/Xcode.app/Contents/Developer/usr/bin:$PATH

# tar xzf PyQt-gpl-4.xx.x.tar.gz
# cd PyQt-gpl-4.xx.x
# python3 ./configure.py
(for Qt5: # python3 configure.py -q /Users/<username>/Qt5.1.1/5.1.1/clang_64/bin/qmake)
# make
# sudo make install

NOTE: there shouldn't be any space in the install directory path, otherwise configure will fail


7) Install Numpy

download source

# cd numpy
# python3 setup.py build
# sudo python3 setup.py install

NOTE: always remove the build directory completely before recompiling


to reduce the size of the final app package remove unused components

# sudo rm -rf /Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/site-packages/numpy/doc


Install from a wheel package (here v1.8.1 for Python3.4:

# pip3.4 install ./numpy-1.8.1-cp34-cp34m-macosx_10_6_intel.whl



8) scipy from git source

# cd scipy
# python3 setup.py build
# sudo python3 setup.py install

NOTE: always remove the build directory completely before recompiling


9) distribute (automatically installed with matplotlib)

# python3 setup.py build
# sudo python3 setup.py install


10) Install matplotlib


10.1) install freetype and libpng dependencies

installed homebrew via

# ruby -e "$(curl -fsSkL raw.github.com/mxcl/homebrew/go)"
# brew doctor

installed matplotlib dependencies before its compilation via
# brew install libpng freetype

# sudo mv /usr/local/include/freetype2 freetype2.off
# sudo mv /usr/local/bin/freetype-config /usr/local/bin/freetype-config.org

# sudo mv /usr/local/share/aclocal/freetype2.m4 /usr/local/share/aclocal/freetype2.m4.org
# sudo mv /usr/local/lib/pkgconfig/freetype2.pc /usr/local/lib/pkgconfig/freetype2.pc.org
# sudo mv /usr/local/lib/libfreetype.dylib /usr/local/lib/libfreetype.dylib.org
# sudo mv /usr/local/lib/libfreetype.a /usr/local/lib/libfreetype.a.org
# sudo mv /usr/local/lib/libfreetype.6.dylib /usr/local/lib/libfreetype.6.dylib.org
# brew link freetype

# brew install pkg-config

10.2) Install matplotlib library

download matplotlib-1.3.x.tar.gz
=> downloads and installs distribute 0.6.45 if not yet installed from http://pypi.python.org/packages/source/d/distribute/distribute-0.6.45.tar.gz


# tar -xzf matplotlib-1.3.x.tar.gz
# cd matplotlib-1.3.x
# python3 setup.py build
# sudo python3 setup.py install

NOTE: to clean build dir use "python3 setup.py clean --all"

11) altgraph (automatically installed with py2app below)

# hg clone https://bitbucket.org/ronaldoussoren/altgraph

12) modulegraph (automatically installed with py2app below)

# hg clone https://bitbucket.org/ronaldoussoren/modulegraph

13) py2app

from repository
# hg clone https://bitbucket.org/ronaldoussoren/py2app
# cd py2app
# python3 setup.py build
# sudo python3 setup.py install

from release downloaded from http://pypi.python.org/pypi/py2app/
# tar -xzf py2app-0.7.3.tar.gz
# cd py2app-0.7.3
# python3 setup.py build
# sudo python3 setup.py install

14) Arduino

download from http://arduino.cc and install using the installer

=====
Generate Tonino firmware to a tonino.hex file

o hold down the shift key while clicking on the upload button in the Arduino.app toolbar
or flag "show verbose output during compile" in the Preference dialog

o compile the firmware and copy the *.hex file to includes/tonino.hex


15) Install pyobjc

(see http://www.albrecht.lt/2013/09/nsconcretemaptable-error/ and http://meme.biology.tohoku.ac.jp/students/iwasaki/python/pyqt.html)

Download pyobjc-core-2.5.1.tar.gz, pyobjc-framework-Cocoa-2.5.1.tar.gz, pyobjc-framework-Quartz-2.5.1.tar.gz
from http://pythonhosted.org/pyobjc/

a) install pyobjc-core

# python setup.py build
# sudo python setup.py install

b) install pyobjc-framework-Cocoa

# python setup.py build
# sudo python setup.py install

c) install pyobjc-framework-Quartz

# python setup.py build
# sudo python setup.py install

ALTERNATIVE PIP INSTALL

# env CC=clang pip3.4 install -U pyobjc-core==2.5.1
# env CC=clang pip3.4 install -U pyobjc-framework-Cocoa==2.5.1
# env CC=clang pip3.4 install -U pyobjc-framework-Quartz==2.5.1

